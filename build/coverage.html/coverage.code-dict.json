{"/home/travis/build/npmtest/node-npmtest-notie/test.js":"/* istanbul instrument in package npmtest_notie */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-notie/lib.npmtest_notie.js":"/* istanbul instrument in package npmtest_notie */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_notie = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_notie = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-notie/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-notie && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_notie */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_notie\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_notie.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_notie.rollup.js'] =\n            local.assetsDict['/assets.npmtest_notie.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_notie.__dirname + '/lib.npmtest_notie.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-notie/node_modules/notie/dist/notie.min.js":"!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.notie=t():e.notie=t()}(this,function(){return function(e){function t(s){if(n[s])return n[s].exports;var a=n[s]={i:s,l:!1,exports:{}};return e[s].call(a.exports,a,a.exports,t),a.l=!0,a.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,s){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:s})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"\",t(t.s=1)}([function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,\"loaded\",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,\"id\",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){\"use strict\";(function(e){var n,s,a,i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};!function(c,o){\"object\"===i(t)&&\"object\"===i(e)?e.exports=o():(s=[],n=o,a=\"function\"==typeof n?n.apply(t,s):n,!(void 0!==a&&(e.exports=a)))}(void 0,function(){return function(e){function t(s){if(n[s])return n[s].exports;var a=n[s]={i:s,l:!1,exports:{}};return e[s].call(a.exports,a,a.exports,t),a.l=!0,a.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,s){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:s})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"\",t(t.s=0)}([function(e,t,n){function s(e,t){var n={};for(var s in e)t.indexOf(s)>=0||Object.prototype.hasOwnProperty.call(e,s)&&(n[s]=e[s]);return n}Object.defineProperty(t,\"__esModule\",{value:!0});var a=\"function\"==typeof Symbol&&\"symbol\"===i(Symbol.iterator)?function(e){return\"undefined\"==typeof e?\"undefined\":i(e)}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":\"undefined\"==typeof e?\"undefined\":i(e)},c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s])}return e},o={top:\"top\",bottom:\"bottom\"},r={alertTime:3,dateMonths:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],overlayClickDismiss:!0,overlayOpacity:.75,transitionCurve:\"ease\",transitionDuration:.3,transitionSelector:\"all\",classes:{container:\"notie-container\",textbox:\"notie-textbox\",textboxInner:\"notie-textbox-inner\",button:\"notie-button\",element:\"notie-element\",elementHalf:\"notie-element-half\",elementThird:\"notie-element-third\",overlay:\"notie-overlay\",backgroundSuccess:\"notie-background-success\",backgroundWarning:\"notie-background-warning\",backgroundError:\"notie-background-error\",backgroundInfo:\"notie-background-info\",backgroundNeutral:\"notie-background-neutral\",backgroundOverlay:\"notie-background-overlay\",alert:\"notie-alert\",inputField:\"notie-input-field\",selectChoiceRepeated:\"notie-select-choice-repeated\",dateSelectorInner:\"notie-date-selector-inner\",dateSelectorUp:\"notie-date-selector-up\"},ids:{overlay:\"notie-overlay\"},positions:{alert:o.top,force:o.top,confirm:o.top,input:o.top,select:o.bottom,date:o.top}},l=t.setOptions=function(e){r=c({},r,e,{classes:c({},r.classes,e.classes),ids:c({},r.ids,e.ids),positions:c({},r.positions,e.positions)})},d=function(){return new Promise(function(e){return setTimeout(e,0)})},u=function(e){return new Promise(function(t){return setTimeout(t,1e3*e)})},p=function(){document.activeElement&&document.activeElement.blur()},f=function(){var e=\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g,function(e){var t=16*Math.random()|0,n=\"x\"===e?t:3&t|8;return n.toString(16)});return\"notie-\"+e},m={1:r.classes.backgroundSuccess,success:r.classes.backgroundSuccess,2:r.classes.backgroundWarning,warning:r.classes.backgroundWarning,3:r.classes.backgroundError,error:r.classes.backgroundError,4:r.classes.backgroundInfo,info:r.classes.backgroundInfo,5:r.classes.backgroundNeutral,neutral:r.classes.backgroundNeutral},v=function(){return r.transitionSelector+\" \"+r.transitionDuration+\"s \"+r.transitionCurve},b=function(e){return 13===e.keyCode},x=function(e){return 27===e.keyCode},y=function(e,t){e.classList.add(r.classes.container),e.style[t]=\"-10000px\",document.body.appendChild(e),e.style[t]=\"-\"+e.offsetHeight+\"px\",e.listener&&window.addEventListener(\"keydown\",e.listener),d().then(function(){e.style.transition=v(),e.style[t]=0})},L=function(e,t){var n=document.getElementById(e);n&&(n.style[t]=\"-\"+n.offsetHeight+\"px\",n.listener&&window.removeEventListener(\"keydown\",n.listener),u(r.transitionDuration).then(function(){n.parentNode&&n.parentNode.removeChild(n)}))},g=function(e,t){var n=document.createElement(\"div\");n.id=r.ids.overlay,n.classList.add(r.classes.overlay),n.classList.add(r.classes.backgroundOverlay),n.style.opacity=0,e&&r.overlayClickDismiss&&(n.onclick=function(){L(e.id,t),h()}),document.body.appendChild(n),d().then(function(){n.style.transition=v(),n.style.opacity=r.overlayOpacity})},h=function(){var e=document.getElementById(r.ids.overlay);e.style.opacity=0,u(r.transitionDuration).then(function(){e.parentNode&&e.parentNode.removeChild(e)})},k=t.hideAlerts=function(e){var t=document.getElementsByClassName(r.classes.alert);if(t.length){for(var n=0;n<t.length;n++){var s=t[n];L(s.id,s.position)}e&&u(r.transitionDuration).then(function(){return e()})}},C=t.alert=function(e){var t=e.type,n=void 0===t?4:t,s=e.text,a=e.time,i=void 0===a?r.alertTime:a,c=e.stay,o=void 0!==c&&c,l=e.position,d=void 0===l?r.positions.alert||d.top:l;p(),k();var v=document.createElement(\"div\"),g=f();v.id=g,v.position=d,v.classList.add(r.classes.textbox),v.classList.add(m[n]),v.classList.add(r.classes.alert),v.innerHTML='<div class=\"'+r.classes.textboxInner+'\">'+s+\"</div>\",v.onclick=function(){return L(g,d)},v.listener=function(e){(b(e)||x(e))&&k()},y(v,d),i&&i<1&&(i=1),!o&&i&&u(i).then(function(){return L(g,d)})},E=t.force=function(e,t){var n=e.type,s=void 0===n?5:n,a=e.text,i=e.buttonText,c=void 0===i?\"OK\":i,o=e.callback,l=e.position,d=void 0===l?r.positions.force||d.top:l;p(),k();var u=document.createElement(\"div\"),v=f();u.id=v;var x=document.createElement(\"div\");x.classList.add(r.classes.textbox),x.classList.add(r.classes.backgroundInfo),x.innerHTML='<div class=\"'+r.classes.textboxInner+'\">'+a+\"</div>\";var C=document.createElement(\"div\");C.classList.add(r.classes.button),C.classList.add(m[s]),C.innerHTML=c,C.onclick=function(){L(v,d),h(),o?o():t&&t()},u.appendChild(x),u.appendChild(C),u.listener=function(e){b(e)&&C.click()},y(u,d),g()},T=t.confirm=function(e,t,n){var s=e.text,a=e.submitText,i=void 0===a?\"Yes\":a,c=e.cancelText,o=void 0===c?\"Cancel\":c,l=e.submitCallback,d=e.cancelCallback,u=e.position,m=void 0===u?r.positions.confirm||m.top:u;p(),k();var v=document.createElement(\"div\"),C=f();v.id=C;var E=document.createElement(\"div\");E.classList.add(r.classes.textbox),E.classList.add(r.classes.backgroundInfo),E.innerHTML='<div class=\"'+r.classes.textboxInner+'\">'+s+\"</div>\";var T=document.createElement(\"div\");T.classList.add(r.classes.button),T.classList.add(r.classes.elementHalf),T.classList.add(r.classes.backgroundSuccess),T.innerHTML=i,T.onclick=function(){L(C,m),h(),l?l():t&&t()};var M=document.createElement(\"div\");M.classList.add(r.classes.button),M.classList.add(r.classes.elementHalf),M.classList.add(r.classes.backgroundError),M.innerHTML=o,M.onclick=function(){L(C,m),h(),d?d():n&&n()},v.appendChild(E),v.appendChild(T),v.appendChild(M),v.listener=function(e){b(e)?T.click():x(e)&&M.click()},y(v,m),g(v,m)},M=function(e,t,n){var i=e.text,c=e.submitText,o=void 0===c?\"Submit\":c,l=e.cancelText,d=void 0===l?\"Cancel\":l,u=e.submitCallback,m=e.cancelCallback,v=e.position,C=void 0===v?r.positions.input||C.top:v,E=s(e,[\"text\",\"submitText\",\"cancelText\",\"submitCallback\",\"cancelCallback\",\"position\"]);p(),k();var T=document.createElement(\"div\"),M=f();T.id=M;var H=document.createElement(\"div\");H.classList.add(r.classes.textbox),H.classList.add(r.classes.backgroundInfo),H.innerHTML='<div class=\"'+r.classes.textboxInner+'\">'+i+\"</div>\";var S=document.createElement(\"input\");S.classList.add(r.classes.inputField),S.setAttribute(\"autocapitalize\",E.autocapitalize||\"none\"),S.setAttribute(\"autocomplete\",E.autocomplete||\"off\"),S.setAttribute(\"autocorrect\",E.autocorrect||\"off\"),S.setAttribute(\"autofocus\",E.autofocus||\"true\"),S.setAttribute(\"inputmode\",E.inputmode||\"verbatim\"),S.setAttribute(\"max\",E.max||\"\"),S.setAttribute(\"maxlength\",E.maxlength||\"\"),S.setAttribute(\"min\",E.min||\"\"),S.setAttribute(\"minlength\",E.minlength||\"\"),S.setAttribute(\"placeholder\",E.placeholder||\"\"),S.setAttribute(\"spellcheck\",E.spellcheck||\"default\"),S.setAttribute(\"step\",E.step||\"any\"),S.setAttribute(\"type\",E.type||\"text\"),S.value=E.value||\"\",E.allowed&&(S.oninput=function(){var e=void 0;if(Array.isArray(E.allowed)){for(var t=\"\",n=E.allowed,s=0;s<n.length;s++)\"an\"===n[s]?t+=\"0-9a-zA-Z\":\"a\"===n[s]?t+=\"a-zA-Z\":\"n\"===n[s]&&(t+=\"0-9\"),\"s\"===n[s]&&(t+=\" \");e=new RegExp(\"[^\"+t+\"]\",\"g\")}else\"object\"===a(E.allowed)&&(e=E.allowed);S.value=S.value.replace(e,\"\")});var w=document.createElement(\"div\");w.classList.add(r.classes.button),w.classList.add(r.classes.elementHalf),w.classList.add(r.classes.backgroundSuccess),w.innerHTML=o,w.onclick=function(){L(M,C),h(),u?u(S.value):t&&t(S.value)};var O=document.createElement(\"div\");O.classList.add(r.classes.button),O.classList.add(r.classes.elementHalf),O.classList.add(r.classes.backgroundError),O.innerHTML=d,O.onclick=function(){L(M,C),h(),m?m(S.value):n&&n(S.value)},T.appendChild(H),T.appendChild(S),T.appendChild(w),T.appendChild(O),T.listener=function(e){b(e)?w.click():x(e)&&O.click()},y(T,C),S.focus(),g(T,C)};t.input=M;var H=t.select=function(e,t){var n=e.text,s=e.cancelText,a=void 0===s?\"Cancel\":s,i=e.cancelCallback,c=e.choices,o=e.position,l=void 0===o?r.positions.select||l.top:o;p(),k();var d=document.createElement(\"div\"),u=f();d.id=u;var v=document.createElement(\"div\");v.classList.add(r.classes.textbox),v.classList.add(r.classes.backgroundInfo),v.innerHTML='<div class=\"'+r.classes.textboxInner+'\">'+n+\"</div>\",d.appendChild(v),c.forEach(function(e,t){var n=e.type,s=void 0===n?1:n,a=e.text,i=e.handler,o=document.createElement(\"div\");o.classList.add(m[s]),o.classList.add(r.classes.button),o.classList.add(r.classes.selectChoice);var p=c[t+1];p&&!p.type&&(p.type=1),p&&p.type===s&&o.classList.add(r.classes.selectChoiceRepeated),o.innerHTML=a,o.onclick=function(){L(u,l),h(),i()},d.appendChild(o)});var b=document.createElement(\"div\");b.classList.add(r.classes.backgroundNeutral),b.classList.add(r.classes.button),b.innerHTML=a,b.onclick=function(){L(u,l),h(),i?i():t&&t()},d.appendChild(b),d.listener=function(e){x(e)&&b.click()},y(d,l),g(d,l)},S=t.date=function(e,t,n){var s=e.value,a=void 0===s?new Date:s,i=e.submitText,c=void 0===i?\"OK\":i,o=e.cancelText,l=void 0===o?\"Cancel\":o,d=e.submitCallback,u=e.cancelCallback,m=e.position,v=void 0===m?r.positions.date||v.top:m;p(),k();var C=\"&#9662\",E=document.createElement(\"div\"),T=document.createElement(\"div\"),M=document.createElement(\"div\"),H=function(e){E.innerHTML=r.dateMonths[e.getMonth()],T.innerHTML=e.getDate(),M.innerHTML=e.getFullYear()},S=function(e){var t=new Date(a.getFullYear(),a.getMonth()+1,0).getDate(),n=e.target.textContent.replace(/^0+/,\"\").replace(/[^\\d]/g,\"\").slice(0,2);Number(n)>t&&(n=t.toString()),e.target.textContent=n,Number(n)<1&&(n=\"1\"),a.setDate(Number(n))},w=function(e){var t=e.target.textContent.replace(/^0+/,\"\").replace(/[^\\d]/g,\"\").slice(0,4);e.target.textContent=t,a.setFullYear(Number(t))},O=function(e){H(a)},A=function(e){var t=new Date(a.getFullYear(),a.getMonth()+e+1,0).getDate();a.getDate()>t&&a.setDate(t),a.setMonth(a.getMonth()+e),H(a)},D=function(e){a.setDate(a.getDate()+e),H(a)},I=function(e){var t=a.getFullYear()+e;t<0?a.setFullYear(0):a.setFullYear(a.getFullYear()+e),H(a)},j=document.createElement(\"div\"),N=f();j.id=N;var P=document.createElement(\"div\");P.classList.add(r.classes.backgroundInfo);var F=document.createElement(\"div\");F.classList.add(r.classes.dateSelectorInner);var Y=document.createElement(\"div\");Y.classList.add(r.classes.button),Y.classList.add(r.classes.elementThird),Y.classList.add(r.classes.dateSelectorUp),Y.innerHTML=C;var _=document.createElement(\"div\");_.classList.add(r.classes.button),_.classList.add(r.classes.elementThird),_.classList.add(r.classes.dateSelectorUp),_.innerHTML=C;var z=document.createElement(\"div\");z.classList.add(r.classes.button),z.classList.add(r.classes.elementThird),z.classList.add(r.classes.dateSelectorUp),z.innerHTML=C,E.classList.add(r.classes.element),E.classList.add(r.classes.elementThird),E.innerHTML=r.dateMonths[a.getMonth()],T.classList.add(r.classes.element),T.classList.add(r.classes.elementThird),T.setAttribute(\"contentEditable\",!0),T.addEventListener(\"input\",S),T.addEventListener(\"blur\",O),T.innerHTML=a.getDate(),M.classList.add(r.classes.element),M.classList.add(r.classes.elementThird),M.setAttribute(\"contentEditable\",!0),M.addEventListener(\"input\",w),M.addEventListener(\"blur\",O),M.innerHTML=a.getFullYear();var U=document.createElement(\"div\");U.classList.add(r.classes.button),U.classList.add(r.classes.elementThird),U.innerHTML=C;var B=document.createElement(\"div\");B.classList.add(r.classes.button),B.classList.add(r.classes.elementThird),B.innerHTML=C;var J=document.createElement(\"div\");J.classList.add(r.classes.button),J.classList.add(r.classes.elementThird),J.innerHTML=C,Y.onclick=function(){return A(1)},_.onclick=function(){return D(1)},z.onclick=function(){return I(1)},U.onclick=function(){return A(-1)},B.onclick=function(){return D(-1)},J.onclick=function(){return I(-1)};var R=document.createElement(\"div\");R.classList.add(r.classes.button),R.classList.add(r.classes.elementHalf),R.classList.add(r.classes.backgroundSuccess),R.innerHTML=c,R.onclick=function(){L(N,v),h(),d?d(a):t&&t(a)};var W=document.createElement(\"div\");W.classList.add(r.classes.button),W.classList.add(r.classes.elementHalf),W.classList.add(r.classes.backgroundError),W.innerHTML=l,W.onclick=function(){L(N,v),h(),u?u(a):n&&n(a)},F.appendChild(Y),F.appendChild(_),F.appendChild(z),F.appendChild(E),F.appendChild(T),F.appendChild(M),F.appendChild(U),F.appendChild(B),F.appendChild(J),P.appendChild(F),j.appendChild(P),j.appendChild(R),j.appendChild(W),j.listener=function(e){b(e)?R.click():x(e)&&W.click()},y(j,v),g(j,v)};t.default={alert:C,force:E,confirm:T,input:M,select:H,date:S,setOptions:l,hideAlerts:k}}])})}).call(t,n(0)(e))}])});","/home/travis/build/npmtest/node-npmtest-notie/node_modules/notie/src/notie.js":"// ====================\n// options\n// ====================\n\nconst positions = {\n  top: 'top',\n  bottom: 'bottom'\n}\n\nlet options = {\n  alertTime: 3,\n  dateMonths: ['January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'],\n  overlayClickDismiss: true,\n  overlayOpacity: 0.75,\n  transitionCurve: 'ease',\n  transitionDuration: 0.3,\n  transitionSelector: 'all',\n  classes: {\n    container: 'notie-container',\n    textbox: 'notie-textbox',\n    textboxInner: 'notie-textbox-inner',\n    button: 'notie-button',\n    element: 'notie-element',\n    elementHalf: 'notie-element-half',\n    elementThird: 'notie-element-third',\n    overlay: 'notie-overlay',\n    backgroundSuccess: 'notie-background-success',\n    backgroundWarning: 'notie-background-warning',\n    backgroundError: 'notie-background-error',\n    backgroundInfo: 'notie-background-info',\n    backgroundNeutral: 'notie-background-neutral',\n    backgroundOverlay: 'notie-background-overlay',\n    alert: 'notie-alert',\n    inputField: 'notie-input-field',\n    selectChoiceRepeated: 'notie-select-choice-repeated',\n    dateSelectorInner: 'notie-date-selector-inner',\n    dateSelectorUp: 'notie-date-selector-up'\n  },\n  ids: {\n    overlay: 'notie-overlay'\n  },\n  positions: {\n    alert: positions.top,\n    force: positions.top,\n    confirm: positions.top,\n    input: positions.top,\n    select: positions.bottom,\n    date: positions.top\n  }\n}\n\nexport const setOptions = newOptions => {\n  options = {\n    ...options,\n    ...newOptions,\n    classes: { ...options.classes, ...newOptions.classes },\n    ids: { ...options.ids, ...newOptions.ids },\n    positions: { ...options.positions, ...newOptions.positions }\n  }\n}\n\n// ====================\n// helpers\n// ====================\n\nconst tick = () => new Promise(resolve => setTimeout(resolve, 0))\nconst wait = time => new Promise(resolve => setTimeout(resolve, time * 1000))\n\nconst blur = () => {\n  document.activeElement && document.activeElement.blur()\n}\n\nconst generateRandomId = () => {\n  // RFC4122 version 4 compliant UUID\n  const id = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = Math.random() * 16 | 0\n    const v = c === 'x' ? r : (r & 0x3 | 0x8)\n    return v.toString(16)\n  })\n  return `notie-${id}`\n}\n\nconst typeToClassLookup = {\n  1: options.classes.backgroundSuccess,\n  success: options.classes.backgroundSuccess,\n  2: options.classes.backgroundWarning,\n  warning: options.classes.backgroundWarning,\n  3: options.classes.backgroundError,\n  error: options.classes.backgroundError,\n  4: options.classes.backgroundInfo,\n  info: options.classes.backgroundInfo,\n  5: options.classes.backgroundNeutral,\n  neutral: options.classes.backgroundNeutral\n}\n\nconst getTransition = () => (\n  `${options.transitionSelector} ${options.transitionDuration}s ${options.transitionCurve}`\n)\n\nconst enterClicked = event => event.keyCode === 13\nconst escapeClicked = event => event.keyCode === 27\n\nconst addToDocument = (element, position) => {\n  element.classList.add(options.classes.container)\n  element.style[position] = '-10000px'\n  document.body.appendChild(element)\n  element.style[position] = `-${element.offsetHeight}px`\n\n  if (element.listener) window.addEventListener('keydown', element.listener)\n\n  tick().then(() => {\n    element.style.transition = getTransition()\n    element.style[position] = 0\n  })\n}\n\nconst removeFromDocument = (id, position) => {\n  const element = document.getElementById(id)\n  if (!element) return\n  element.style[position] = `-${element.offsetHeight}px`\n\n  if (element.listener) window.removeEventListener('keydown', element.listener)\n\n  wait(options.transitionDuration).then(() => {\n    if (element.parentNode) element.parentNode.removeChild(element)\n  })\n}\n\nconst addOverlayToDocument = (owner, position) => {\n  const element = document.createElement('div')\n  element.id = options.ids.overlay\n  element.classList.add(options.classes.overlay)\n  element.classList.add(options.classes.backgroundOverlay)\n  element.style.opacity = 0\n  if (owner && options.overlayClickDismiss) {\n    element.onclick = () => {\n      removeFromDocument(owner.id, position)\n      removeOverlayFromDocument()\n    }\n  }\n\n  document.body.appendChild(element)\n\n  tick().then(() => {\n    element.style.transition = getTransition()\n    element.style.opacity = options.overlayOpacity\n  })\n}\n\nconst removeOverlayFromDocument = () => {\n  const element = document.getElementById(options.ids.overlay)\n  element.style.opacity = 0\n  wait(options.transitionDuration).then(() => {\n    if (element.parentNode) element.parentNode.removeChild(element)\n  })\n}\n\nexport const hideAlerts = callback => {\n  const alertsShowing = document.getElementsByClassName(options.classes.alert)\n  if (alertsShowing.length) {\n    for (let i = 0; i < alertsShowing.length; i++) {\n      const alert = alertsShowing[i]\n      removeFromDocument(alert.id, alert.position)\n    }\n    if (callback) wait(options.transitionDuration).then(() => callback())\n  }\n}\n\n// ====================\n// exports\n// ====================\n\nexport const alert = ({\n  type = 4,\n  text,\n  time = options.alertTime,\n  stay = false,\n  position = options.positions.alert || position.top\n}) => {\n  blur()\n  hideAlerts()\n\n  const element = document.createElement('div')\n  const id = generateRandomId()\n  element.id = id\n  element.position = position\n  element.classList.add(options.classes.textbox)\n  element.classList.add(typeToClassLookup[type])\n  element.classList.add(options.classes.alert)\n  element.innerHTML = `<div class=\"${options.classes.textboxInner}\">${text}</div>`\n  element.onclick = () => removeFromDocument(id, position)\n\n  element.listener = event => {\n    if (enterClicked(event) || escapeClicked(event)) hideAlerts()\n  }\n\n  addToDocument(element, position)\n\n  if (time && time < 1) time = 1\n  if (!stay && time) wait(time).then(() => removeFromDocument(id, position))\n}\n\nexport const force = ({\n  type = 5,\n  text,\n  buttonText = 'OK',\n  callback,\n  position = options.positions.force || position.top\n}, callbackArg) => {\n  blur()\n  hideAlerts()\n\n  const element = document.createElement('div')\n  const id = generateRandomId()\n  element.id = id\n\n  const elementText = document.createElement('div')\n  elementText.classList.add(options.classes.textbox)\n  elementText.classList.add(options.classes.backgroundInfo)\n  elementText.innerHTML = `<div class=\"${options.classes.textboxInner}\">${text}</div>`\n\n  const elementButton = document.createElement('div')\n  elementButton.classList.add(options.classes.button)\n  elementButton.classList.add(typeToClassLookup[type])\n  elementButton.innerHTML = buttonText\n  elementButton.onclick = () => {\n    removeFromDocument(id, position)\n    removeOverlayFromDocument()\n    if (callback) callback()\n    else if (callbackArg) callbackArg()\n  }\n\n  element.appendChild(elementText)\n  element.appendChild(elementButton)\n\n  element.listener = event => {\n    if (enterClicked(event)) elementButton.click()\n  }\n\n  addToDocument(element, position)\n\n  addOverlayToDocument()\n}\n\nexport const confirm = ({\n  text,\n  submitText = 'Yes',\n  cancelText = 'Cancel',\n  submitCallback,\n  cancelCallback,\n  position = options.positions.confirm || position.top\n}, submitCallbackArg, cancelCallbackArg) => {\n  blur()\n  hideAlerts()\n\n  const element = document.createElement('div')\n  const id = generateRandomId()\n  element.id = id\n\n  const elementText = document.createElement('div')\n  elementText.classList.add(options.classes.textbox)\n  elementText.classList.add(options.classes.backgroundInfo)\n  elementText.innerHTML = `<div class=\"${options.classes.textboxInner}\">${text}</div>`\n\n  const elementButtonLeft = document.createElement('div')\n  elementButtonLeft.classList.add(options.classes.button)\n  elementButtonLeft.classList.add(options.classes.elementHalf)\n  elementButtonLeft.classList.add(options.classes.backgroundSuccess)\n  elementButtonLeft.innerHTML = submitText\n  elementButtonLeft.onclick = () => {\n    removeFromDocument(id, position)\n    removeOverlayFromDocument()\n    if (submitCallback) submitCallback()\n    else if (submitCallbackArg) submitCallbackArg()\n  }\n\n  const elementButtonRight = document.createElement('div')\n  elementButtonRight.classList.add(options.classes.button)\n  elementButtonRight.classList.add(options.classes.elementHalf)\n  elementButtonRight.classList.add(options.classes.backgroundError)\n  elementButtonRight.innerHTML = cancelText\n  elementButtonRight.onclick = () => {\n    removeFromDocument(id, position)\n    removeOverlayFromDocument()\n    if (cancelCallback) cancelCallback()\n    else if (cancelCallbackArg) cancelCallbackArg()\n  }\n\n  element.appendChild(elementText)\n  element.appendChild(elementButtonLeft)\n  element.appendChild(elementButtonRight)\n\n  element.listener = event => {\n    if (enterClicked(event)) elementButtonLeft.click()\n    else if (escapeClicked(event)) elementButtonRight.click()\n  }\n\n  addToDocument(element, position)\n\n  addOverlayToDocument(element, position)\n}\n\nexport const input = ({\n  text,\n  submitText = 'Submit',\n  cancelText = 'Cancel',\n  submitCallback,\n  cancelCallback,\n  position = options.positions.input || position.top,\n  ...settings\n}, submitCallbackArg, cancelCallbackArg) => {\n  blur()\n  hideAlerts()\n\n  const element = document.createElement('div')\n  const id = generateRandomId()\n  element.id = id\n\n  const elementText = document.createElement('div')\n  elementText.classList.add(options.classes.textbox)\n  elementText.classList.add(options.classes.backgroundInfo)\n  elementText.innerHTML = `<div class=\"${options.classes.textboxInner}\">${text}</div>`\n\n  const elementInput = document.createElement('input')\n  elementInput.classList.add(options.classes.inputField)\n\n  elementInput.setAttribute('autocapitalize', settings.autocapitalize || 'none')\n  elementInput.setAttribute('autocomplete', settings.autocomplete || 'off')\n  elementInput.setAttribute('autocorrect', settings.autocorrect || 'off')\n  elementInput.setAttribute('autofocus', settings.autofocus || 'true')\n  elementInput.setAttribute('inputmode', settings.inputmode || 'verbatim')\n  elementInput.setAttribute('max', settings.max || '')\n  elementInput.setAttribute('maxlength', settings.maxlength || '')\n  elementInput.setAttribute('min', settings.min || '')\n  elementInput.setAttribute('minlength', settings.minlength || '')\n  elementInput.setAttribute('placeholder', settings.placeholder || '')\n  elementInput.setAttribute('spellcheck', settings.spellcheck || 'default')\n  elementInput.setAttribute('step', settings.step || 'any')\n  elementInput.setAttribute('type', settings.type || 'text')\n\n  elementInput.value = settings.value || ''\n\n  // As-you-type input restrictions\n  if (settings.allowed) {\n    elementInput.oninput = () => {\n      let regex\n      if (Array.isArray(settings.allowed)) {\n        let regexString = ''\n        const allowed = settings.allowed\n        for (let i = 0; i < allowed.length; i++) {\n          if (allowed[i] === 'an') regexString += '0-9a-zA-Z'\n          else if (allowed[i] === 'a') regexString += 'a-zA-Z'\n          else if (allowed[i] === 'n') regexString += '0-9'\n          if (allowed[i] === 's') regexString += ' '\n        }\n        regex = new RegExp(`[^${regexString}]`, 'g')\n      } else if (typeof settings.allowed === 'object') {\n        regex = settings.allowed\n      }\n      elementInput.value = elementInput.value.replace(regex, '')\n    }\n  }\n\n  const elementButtonLeft = document.createElement('div')\n  elementButtonLeft.classList.add(options.classes.button)\n  elementButtonLeft.classList.add(options.classes.elementHalf)\n  elementButtonLeft.classList.add(options.classes.backgroundSuccess)\n  elementButtonLeft.innerHTML = submitText\n  elementButtonLeft.onclick = () => {\n    removeFromDocument(id, position)\n    removeOverlayFromDocument()\n    if (submitCallback) submitCallback(elementInput.value)\n    else if (submitCallbackArg) submitCallbackArg(elementInput.value)\n  }\n\n  const elementButtonRight = document.createElement('div')\n  elementButtonRight.classList.add(options.classes.button)\n  elementButtonRight.classList.add(options.classes.elementHalf)\n  elementButtonRight.classList.add(options.classes.backgroundError)\n  elementButtonRight.innerHTML = cancelText\n  elementButtonRight.onclick = () => {\n    removeFromDocument(id, position)\n    removeOverlayFromDocument()\n    if (cancelCallback) cancelCallback(elementInput.value)\n    else if (cancelCallbackArg) cancelCallbackArg(elementInput.value)\n  }\n\n  element.appendChild(elementText)\n  element.appendChild(elementInput)\n  element.appendChild(elementButtonLeft)\n  element.appendChild(elementButtonRight)\n\n  element.listener = event => {\n    if (enterClicked(event)) elementButtonLeft.click()\n    else if (escapeClicked(event)) elementButtonRight.click()\n  }\n\n  addToDocument(element, position)\n\n  elementInput.focus()\n\n  addOverlayToDocument(element, position)\n}\n\nexport const select = ({\n  text,\n  cancelText = 'Cancel',\n  cancelCallback,\n  choices,\n  position = options.positions.select || position.top\n}, cancelCallbackArg) => {\n  blur()\n  hideAlerts()\n\n  const element = document.createElement('div')\n  const id = generateRandomId()\n  element.id = id\n\n  const elementText = document.createElement('div')\n  elementText.classList.add(options.classes.textbox)\n  elementText.classList.add(options.classes.backgroundInfo)\n  elementText.innerHTML = `<div class=\"${options.classes.textboxInner}\">${text}</div>`\n\n  element.appendChild(elementText)\n\n  choices.forEach(({ type = 1, text, handler }, index) => {\n    const elementChoice = document.createElement('div')\n    elementChoice.classList.add(typeToClassLookup[type])\n    elementChoice.classList.add(options.classes.button)\n    elementChoice.classList.add(options.classes.selectChoice)\n\n    const nextChoice = choices[index + 1]\n    if (nextChoice && !nextChoice.type) nextChoice.type = 1\n    if (nextChoice && nextChoice.type === type) {\n      elementChoice.classList.add(options.classes.selectChoiceRepeated)\n    }\n\n    elementChoice.innerHTML = text\n    elementChoice.onclick = () => {\n      removeFromDocument(id, position)\n      removeOverlayFromDocument()\n      handler()\n    }\n\n    element.appendChild(elementChoice)\n  })\n\n  const elementCancel = document.createElement('div')\n  elementCancel.classList.add(options.classes.backgroundNeutral)\n  elementCancel.classList.add(options.classes.button)\n  elementCancel.innerHTML = cancelText\n  elementCancel.onclick = () => {\n    removeFromDocument(id, position)\n    removeOverlayFromDocument()\n    if (cancelCallback) cancelCallback()\n    else if (cancelCallbackArg) cancelCallbackArg()\n  }\n\n  element.appendChild(elementCancel)\n\n  element.listener = event => {\n    if (escapeClicked(event)) elementCancel.click()\n  }\n\n  addToDocument(element, position)\n\n  addOverlayToDocument(element, position)\n}\n\nexport const date = ({\n  value = new Date(),\n  submitText = 'OK',\n  cancelText = 'Cancel',\n  submitCallback,\n  cancelCallback,\n  position = options.positions.date || position.top\n}, submitCallbackArg, cancelCallbackArg) => {\n  blur()\n  hideAlerts()\n\n  const arrow = '&#9662'\n\n  const elementDateMonth = document.createElement('div')\n  const elementDateDay = document.createElement('div')\n  const elementDateYear = document.createElement('div')\n\n  const setValueHTML = date => {\n    elementDateMonth.innerHTML = options.dateMonths[date.getMonth()]\n    elementDateDay.innerHTML = date.getDate()\n    elementDateYear.innerHTML = date.getFullYear()\n  }\n\n  const handleDayInput = event => {\n    const daysInMonth = new Date(\n      value.getFullYear(),\n      value.getMonth() + 1,\n      0\n    ).getDate()\n    let day = event.target.textContent\n      .replace(/^0+/, '')\n      .replace(/[^\\d]/g, '')\n      .slice(0, 2)\n    if (Number(day) > daysInMonth) day = daysInMonth.toString()\n    event.target.textContent = day\n    if (Number(day) < 1) day = '1'\n    value.setDate(Number(day))\n  }\n\n  const handleYearInput = event => {\n    const year = event.target.textContent\n      .replace(/^0+/, '')\n      .replace(/[^\\d]/g, '')\n      .slice(0, 4)\n    event.target.textContent = year\n    value.setFullYear(Number(year))\n  }\n\n  const handleBlur = event => {\n    setValueHTML(value)\n  }\n\n  const updateMonth = amount => {\n    const daysInNextMonth = new Date(\n      value.getFullYear(),\n      value.getMonth() + amount + 1,\n      0\n    ).getDate()\n    if (value.getDate() > daysInNextMonth) value.setDate(daysInNextMonth)\n    value.setMonth(value.getMonth() + amount)\n    setValueHTML(value)\n  }\n\n  const updateDay = amount => {\n    value.setDate(value.getDate() + amount)\n    setValueHTML(value)\n  }\n\n  const updateYear = amount => {\n    const nextYear = value.getFullYear() + amount\n    if (nextYear < 0) value.setFullYear(0)\n    else value.setFullYear(value.getFullYear() + amount)\n    setValueHTML(value)\n  }\n\n  const element = document.createElement('div')\n  const id = generateRandomId()\n  element.id = id\n\n  const elementDateSelector = document.createElement('div')\n  elementDateSelector.classList.add(options.classes.backgroundInfo)\n\n  const elementDateSelectorInner = document.createElement('div')\n  elementDateSelectorInner.classList.add(options.classes.dateSelectorInner)\n\n  const elementDateUpMonth = document.createElement('div')\n  elementDateUpMonth.classList.add(options.classes.button)\n  elementDateUpMonth.classList.add(options.classes.elementThird)\n  elementDateUpMonth.classList.add(options.classes.dateSelectorUp)\n  elementDateUpMonth.innerHTML = arrow\n\n  const elementDateUpDay = document.createElement('div')\n  elementDateUpDay.classList.add(options.classes.button)\n  elementDateUpDay.classList.add(options.classes.elementThird)\n  elementDateUpDay.classList.add(options.classes.dateSelectorUp)\n  elementDateUpDay.innerHTML = arrow\n\n  const elementDateUpYear = document.createElement('div')\n  elementDateUpYear.classList.add(options.classes.button)\n  elementDateUpYear.classList.add(options.classes.elementThird)\n  elementDateUpYear.classList.add(options.classes.dateSelectorUp)\n  elementDateUpYear.innerHTML = arrow\n\n  elementDateMonth.classList.add(options.classes.element)\n  elementDateMonth.classList.add(options.classes.elementThird)\n  elementDateMonth.innerHTML = options.dateMonths[value.getMonth()]\n\n  elementDateDay.classList.add(options.classes.element)\n  elementDateDay.classList.add(options.classes.elementThird)\n  elementDateDay.setAttribute('contentEditable', true)\n  elementDateDay.addEventListener('input', handleDayInput)\n  elementDateDay.addEventListener('blur', handleBlur)\n  elementDateDay.innerHTML = value.getDate()\n\n  elementDateYear.classList.add(options.classes.element)\n  elementDateYear.classList.add(options.classes.elementThird)\n  elementDateYear.setAttribute('contentEditable', true)\n  elementDateYear.addEventListener('input', handleYearInput)\n  elementDateYear.addEventListener('blur', handleBlur)\n  elementDateYear.innerHTML = value.getFullYear()\n\n  const elementDateDownMonth = document.createElement('div')\n  elementDateDownMonth.classList.add(options.classes.button)\n  elementDateDownMonth.classList.add(options.classes.elementThird)\n  elementDateDownMonth.innerHTML = arrow\n\n  const elementDateDownDay = document.createElement('div')\n  elementDateDownDay.classList.add(options.classes.button)\n  elementDateDownDay.classList.add(options.classes.elementThird)\n  elementDateDownDay.innerHTML = arrow\n\n  const elementDateDownYear = document.createElement('div')\n  elementDateDownYear.classList.add(options.classes.button)\n  elementDateDownYear.classList.add(options.classes.elementThird)\n  elementDateDownYear.innerHTML = arrow\n\n  elementDateUpMonth.onclick = () => updateMonth(1)\n  elementDateUpDay.onclick = () => updateDay(1)\n  elementDateUpYear.onclick = () => updateYear(1)\n  elementDateDownMonth.onclick = () => updateMonth(-1)\n  elementDateDownDay.onclick = () => updateDay(-1)\n  elementDateDownYear.onclick = () => updateYear(-1)\n\n  const elementButtonLeft = document.createElement('div')\n  elementButtonLeft.classList.add(options.classes.button)\n  elementButtonLeft.classList.add(options.classes.elementHalf)\n  elementButtonLeft.classList.add(options.classes.backgroundSuccess)\n  elementButtonLeft.innerHTML = submitText\n  elementButtonLeft.onclick = () => {\n    removeFromDocument(id, position)\n    removeOverlayFromDocument()\n    if (submitCallback) submitCallback(value)\n    else if (submitCallbackArg) submitCallbackArg(value)\n  }\n\n  const elementButtonRight = document.createElement('div')\n  elementButtonRight.classList.add(options.classes.button)\n  elementButtonRight.classList.add(options.classes.elementHalf)\n  elementButtonRight.classList.add(options.classes.backgroundError)\n  elementButtonRight.innerHTML = cancelText\n  elementButtonRight.onclick = () => {\n    removeFromDocument(id, position)\n    removeOverlayFromDocument()\n    if (cancelCallback) cancelCallback(value)\n    else if (cancelCallbackArg) cancelCallbackArg(value)\n  }\n\n  elementDateSelectorInner.appendChild(elementDateUpMonth)\n  elementDateSelectorInner.appendChild(elementDateUpDay)\n  elementDateSelectorInner.appendChild(elementDateUpYear)\n  elementDateSelectorInner.appendChild(elementDateMonth)\n  elementDateSelectorInner.appendChild(elementDateDay)\n  elementDateSelectorInner.appendChild(elementDateYear)\n  elementDateSelectorInner.appendChild(elementDateDownMonth)\n  elementDateSelectorInner.appendChild(elementDateDownDay)\n  elementDateSelectorInner.appendChild(elementDateDownYear)\n  elementDateSelector.appendChild(elementDateSelectorInner)\n  element.appendChild(elementDateSelector)\n  element.appendChild(elementButtonLeft)\n  element.appendChild(elementButtonRight)\n\n  element.listener = event => {\n    if (enterClicked(event)) elementButtonLeft.click()\n    else if (escapeClicked(event)) elementButtonRight.click()\n  }\n\n  addToDocument(element, position)\n\n  addOverlayToDocument(element, position)\n}\n\nexport default {\n  alert,\n  force,\n  confirm,\n  input,\n  select,\n  date,\n  setOptions,\n  hideAlerts\n}\n"}